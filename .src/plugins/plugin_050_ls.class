' Gambas class file

Create Static
Static Public Description As String = ("List files from a folder")
Static Public Friendly_name As String = ("list plugin")
Static Public configurable As Boolean = False
Static Public Default_enabled As Boolean = True
Static Public default_blocking As Boolean = False                 'Should the subsequent plugins be blocked when
                                                          'this plugin finds some results?
                                                          
Public Struct rItemT
  plugin As String            'the plugin name
  Text As String              'text displayed in the clipboard
  SubText As String           'text displayed under the main text
  Image_file As String        'optional image displayed (fullpath or "DefferredMimeIcon")
  Clipboard_data As String    'the data copied to the clipboard
  Action As String            'string that indicates an action
  Action_p As Variant         'the parameter for Action
End Struct


Private plugin As String
Private iconsize As Integer
Private minchar As Integer = 4   'exit if the search term is lower than that



Public Sub _new(p_plugin As String, p_iconsize As Integer)

  plugin = p_plugin
  iconsize = p_iconsize

End


Private Sub trigged(query As String) As Boolean
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End

' Editable part of the template follows:

Public Sub find(textcontrol As Object) As RItemT[]
  'search for files under the current directory
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text
  Dim s_path, path As String
  Dim aDir As New String[]
  If Not trigged(textcontrol.text) Then Return

  s_path = current_search
  
  If Exist(s_path, True) Then
    If Stat(s_path, True).type = gb.file Then
      Return [create_item(s_path)]
    Endif
  Endif
  
  If Not (s_path Begins "/") Then s_path = User.home & "/" & s_path
  If Not Exist(s_path, True) Then Return
  'If Not (Stat(s_path, True).type = gb.Directory) Then Return

  rResults.Add(create_item(s_path))
  
  Try aDir = Dir(s_path).Sort(gb.Natural + gb.IgnoreCase)
  If Not Error Then
    For Each path In aDir
      If s_path Ends "/" Then 
        path = s_path & path
          Else
        path = s_path & "/" & path
      Endif
      rResult = create_item(path)
      If rResult <> Null Then rResults.Add(rResult)
      Wait
      If textcontrol.text <> current_search Then Return
    Next
  Endif
  Raise new_results(rResults)
End

Event new_results(rResults As RItemT[])

Private Function create_item(path As String) As RItemT
  Dim return_item As RItemT
  Dim isdir As Boolean
    If Exist(path, True) Then
      If Not (path Ends "/") Then 
        isdir = (Stat(path, True).type = gb.Directory)
          Else
        isdir = True
      Endif
      Wait
    Endif

    If path Ends "/" Then path = Left(path, -1)
    return_item = New RItemT
    return_item.plugin = plugin
    return_item.Action = "GUESS" ' DESKTOPOPEN,EXEC,TERMINALEXEC,GUESS,NULL... MORE?
    return_item.Action_p = path
    return_item.Clipboard_data = path
    'Stop
    If isdir Then 
      return_item.image_file = "icon:/" & iconsize & "/directory" 
      return_item.Text = File.Name(path) & "/"    
        Else If path Ends ".desktop" Then
          return_item.image_file = "desktopfile://" & path
          return_item.Text = File.Name(path)    
        Else
      return_item.image_file = "mimetype://" & path
      return_item.Text = File.Name(path)
    Endif
    
    return_item.SubText = "In " & File.dir(path) '& "/"

    Return return_item
End
