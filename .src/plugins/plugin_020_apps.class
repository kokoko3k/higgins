' Gambas class file

Create Static
Static Public Description As String = ("Find desktop applications")
Static Public Friendly_name As String = ("Desktop apps")
Static Public configurable As Boolean = True
Static Public Default_enabled As Boolean = True
Static Public default_blocking As Boolean = False                 'Should the subsequent plugins be blocked when
                                                          'this plugin finds some results?
                                                          
Public Struct rItemT
  plugin As String            'the plugin name
  Text As String              'text displayed in the clipboard
  SubText As String           'text displayed under the main text
  Image_file As String        'optional image displayed (fullpath or "DefferredMimeIcon")
  Clipboard_data As String    'the data copied to the clipboard
  Action As String            'string that indicates an action
  Action_p As Variant          'the parameter for Action
End Struct

Private plugin As String
Private iconsize As Integer
Private minchar As Integer = 3  'exit if the search term is lower than that

Private update_apps As Timer


Public Sub _new(p_plugin As String, p_iconsize As Integer)

  plugin = p_plugin
  iconsize = p_iconsize
  update_apps = New Timer As "update_apps"
  update_apps.delay = 3000
  update_apps.enabled = False

  plugin_apps_gui.init(Me)
  DesktopApps.WarmCache()

End

Private Sub trigged(query As String) As Boolean
  If Len(query) < minchar Then Return False
  'some more controls here (?)
  Return True
End


' Editable part of the template follows:

Public Sub find(textcontrol As Object) As RItemT[]
  'search for filedialogs bookmarks
  Dim rResults As New RItemT[]
  Dim rResult As RItemT
  Dim current_search As String = textcontrol.text
  Dim happ As DesktopApps
  Dim app As String
  Dim ismatched As Boolean = False
  Dim happs As New DesktopApps[]

  If Not trigged(textcontrol.text) Then Return

  For Each app In DesktopApps

      Try happ = DesktopApps[app]
      If Error Then Continue
      If (Not (happ.NoDisplay)) Or (happ.exec_R Like "systemsettings *") Then
        
                                                                                                                                          ' Dim foundebug As Boolean = False
                                                                                                                                          ' 'if (Lower(happ.XKDEServiceTypes) = "kcmodule") Then Stop
                                                                                                                                          ' If happ.file_path Like "*kcm_mouse.desktop*" Then 
                                                                                                                                          '   foundebug = "true"
                                                                                                                                          '   Stop
                                                                                                                                          ' Endif 
                                                                                                                                          ' Debug happ.file_path 
                                                                                                                                          
        
        If (happ.Exec_R <> "") Or (Lower(happ.XKDEServiceTypes) = "kcmodule") Then
          ismatched = InStr(Lower(happ.Get("Name")), Lower(current_search)) > 0 
          If Not ismatched Then 
            If Not ismatched Then ismatched = InStr(Lower(happ.Get("Comment")), Lower(current_search)) > 0 
            If Not ismatched Then ismatched = ismatched Or InStr(Lower(happ.Get("Category")), Lower(current_search)) > 0 
            If Not ismatched Then ismatched = ismatched Or InStr(Lower(happ.Get("Keywords")), Lower(current_search)) > 0 
            If Not ismatched Then ismatched = ismatched Or InStr(Lower(happ.Get("GenericName")), Lower(current_search)) > 0 
            If Not ismatched Then ismatched = ismatched Or InStr(Lower(File.BaseName(happ.file_path)), Lower(current_search)) > 0 
          Endif
        
          If ismatched Then
            add_no_dupe(happs, happ)
            Wait 'if calculations are heavy a wait may be handy.
    
          Endif
        Endif
        If textcontrol.text <> current_search Then Return
      Endif
  Next 'happ

    For Each happ In happs
      rResult = create_item(happ)

      If rResult <> Null Then rResults.Add(rResult)
      Wait 'if calculations are heavy a wait may be handy.
      If textcontrol.text <> current_search Then Return
    Next 'happ

  update_apps.start()
  Raise new_results(rResults)
End

Event new_results(rResults As RItemT[])

Public Sub update_apps_timer()
  update_apps.stop
  DesktopApps.MakeAppList()
End


Private Sub add_no_dupe(happs As DesktopApps[], new_happ As DesktopApps)
  Dim existing_happ As DesktopApps

  For Each existing_happ In happs
        If existing_happ.Get("Exec") = new_happ.Get("Exec") Then 'dupe found
          'prefer the one with the comment
          If existing_happ.Get("Comment") <> "" Then 
            Return
              Else
            If new_happ.Get("Comment") <> "" Then 
              happs.Find(existing_happ)
              existing_happ = new_happ
            Endif
          Endif
          Return  
        Endif
  Next
  'no dupe found
  happs.Add(new_happ)
End





Private Function create_item(happ As DesktopApps) As RItemT
  Dim return_item As RItemT
  Dim subtext As String
    return_item = New RItemT
    return_item.plugin = plugin
    return_item.Action = "DESKTOPOPEN"
    return_item.Action_p = happ.file_path
    return_item.Clipboard_data = happ.file_path
    return_item.image_file = "desktopfile://" & happ.file_path

    return_item.Text = happ.Get("Name")
    If return_item.Text = "" Then 
      return_item.Text = File.BaseName(happ.file_path)
    Endif

    subtext = happ.Get("GenericName") & ", " & happ.Get("Comment")
    If subtext Begins ", " Then subtext = Right(subtext, -2)
    If subtext Ends ", " Then subtext = Left(subtext, -2)
    If subtext = "" Then subtext = ("In: ") & File.Dir(happ.file_path)
    
    return_item.SubText = subtext 
    Return return_item
End

Public Sub configure()
  plugin_apps_gui.Show()
End
